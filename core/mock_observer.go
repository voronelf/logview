package core

import context "context"
import mock "github.com/stretchr/testify/mock"

// MockObserver is an autogenerated mock type for the Observer type
type MockObserver struct {
	mock.Mock
}

// Subscribe provides a mock function with given fields: ctx, filePath, filter
func (_m *MockObserver) Subscribe(ctx context.Context, filePath string, filter Filter) (Subscription, error) {
	ret := _m.Called(ctx, filePath, filter)

	var r0 Subscription
	if rf, ok := ret.Get(0).(func(context.Context, string, Filter) Subscription); ok {
		r0 = rf(ctx, filePath, filter)
	} else {
		r0 = ret.Get(0).(Subscription)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, Filter) error); ok {
		r1 = rf(ctx, filePath, filter)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

var _ Observer = (*MockObserver)(nil)
